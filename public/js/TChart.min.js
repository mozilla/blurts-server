"use strict";class TChart{constructor(t,i,s,e){this.id=t,this.width=i,this.height=s,this.data=e,this.axisRatio=10,this.verticalMargin=this.height*this.axisRatio/100,this.horizontalMargin=this.width*this.axisRatio/100,this.axisColor="grey",this.axisWidth=.75,this.fontRatio=2.5,this.fontFamily="times",this.fontStyle="normal",this.fontWeight="300",this.fontColor="darkgrey",this.verticalFontSize=this.height*this.fontRatio/100,this.horizontalFontSize=this.width*this.fontRatio/100,this.guidelineColor="lightgrey",this.guidelineWidth=.5;let n=document.createElement("canvas");n.id=this.id+"-"+Math.random(),n.width=this.width,n.height=this.height,document.getElementById(this.id).innerHTML="",document.getElementById(this.id).appendChild(n),this.canvas=n,this.context=n.getContext("2d"),this.labels=[],this.values=[],this.data.forEach(t=>{this.labels.push(t.label),this.values.push(t.value)}),this.itemsNumber=this.data.length,this.maxValue=Math.max.apply(null,this.values),this.minValue=Math.min.apply(null,this.values),this.date=new Date,this.verticalAxisWidth=this.height-2*this.verticalMargin,this.horizontalAxisWidth=this.width-2*this.horizontalMargin,this.verticalUpperBound=10*Math.ceil(this.maxValue/10),this.verticalLabelFreq=this.verticalUpperBound/this.itemsNumber,this.horizontalLabelFreq=this.horizontalAxisWidth/this.itemsNumber,this.lineXLine=null,this.lineYLine=null,this.lineXArc=null,this.lineYArc=null,this.linePoints=[],this.lineCurrentPoint={},this.linePointCount=0,this.barsConfigurations=[],this.current}drawBarChart(t={}){let{animation:i=!1}=t;this.drawVerticalAxis(),this.drawVerticalLabels(),this.drawHorizontalAxis(),this.drawHorizontalLabels(),this.drawHorizontalGuidelines(),this.gettingBarsConfiguration(),i?this.barAnimation():this.drawBars()}drawLineChart(t={}){let{animation:i=!1}=t;this.drawVerticalAxis(),this.drawVerticalLabels(),this.drawHorizontalAxis(),this.drawHorizontalLabels(),this.drawHorizontalGuidelines(),this.gettingLinePoints(),i?this.lineAnimation():this.drawLines()}drawVerticalAxis(){this.context.beginPath(),this.context.strokeStyle=this.axisColor,this.context.lineWidth=this.axisWidth,this.context.moveTo(this.horizontalMargin,this.verticalMargin),this.context.lineTo(this.horizontalMargin,this.height-this.verticalMargin),this.context.stroke()}drawVerticalLabels(){let t=this.fontStyle+" "+this.fontWeight+" "+this.verticalFontSize+"px "+this.fontFamily;this.context.font=t,this.context.fillStyle=this.fontColor,this.context.textAlign="right";let i=this.verticalAxisWidth/this.verticalUpperBound*this.verticalLabelFreq;for(let t=0;t<=this.itemsNumber;t++){let s=Math.ceil(this.verticalUpperBound-t*this.verticalLabelFreq),e=this.horizontalMargin-this.horizontalMargin/this.axisRatio,n=this.verticalMargin+t*i;this.context.fillText(s,e,n)}}drawHorizontalAxis(){this.context.beginPath(),this.context.strokeStyle=this.axisColor,this.context.lineWidth=this.axisWidth,this.context.moveTo(this.horizontalMargin,this.height-this.verticalMargin),this.context.lineTo(this.width-this.horizontalMargin,this.height-this.verticalMargin),this.context.stroke()}drawHorizontalLabels(){let t=this.fontStyle+" "+this.fontWeight+" "+this.verticalFontSize+"px "+this.fontFamily;this.context.font=t,this.context.fillStyle=this.fontColor,this.context.textAlign="center",this.context.textBaseline="top";for(let t=0;t<this.itemsNumber;t++){let i=this.horizontalMargin+t*this.horizontalLabelFreq+this.horizontalLabelFreq/2,s=this.height-this.verticalMargin+this.verticalMargin/this.axisRatio;this.context.fillText(this.labels[t],i,s)}}drawHorizontalGuidelines(){this.context.strokeStyle=this.guidelineColor,this.context.lineWidth=this.guidelineWidth;let t=this.verticalAxisWidth/this.verticalUpperBound*this.verticalLabelFreq;for(let i=0;i<=this.itemsNumber;i++){let s=this.horizontalMargin,e=this.verticalMargin+i*t,n=this.horizontalMargin+this.horizontalAxisWidth,h=this.verticalMargin+i*t;this.context.beginPath(),this.context.moveTo(s,e),this.context.lineTo(n,h),this.context.stroke()}}gettingBarsConfiguration(){for(let t=0;t<this.itemsNumber;t++){let i=this.horizontalMargin+t*this.horizontalLabelFreq+this.horizontalLabelFreq/this.axisRatio*2,s=this.height-this.verticalMargin,e=this.horizontalLabelFreq-2*this.horizontalLabelFreq/this.axisRatio*2,n=this.verticalAxisWidth*this.values[t]/this.verticalUpperBound*-1,h=n/1e3,o=this.createRandomRGBColor(),r="0.5",a="rgba("+o.red+","+o.green+","+o.blue+","+r+")",l="rgb("+o.red+","+o.green+","+o.blue+")";this.barsConfigurations.push({xAxis:i,yAxis:s,barWidth:e,barHeight:n,heightVelocity:h,currentHeight:0,fillColor:a,borderColor:l})}}barAnimation(){for(let t=0;t<this.itemsNumber;t++){if(!(this.barsConfigurations[t].currentHeight>this.barsConfigurations[t].barHeight))return;for(let t=0;t<this.itemsNumber;t++)this.barsConfigurations[t].currentHeight+=this.barsConfigurations[t].heightVelocity;this.context.clearRect(this.barsConfigurations[t].xAxis,this.barsConfigurations[t].yAxis,this.barsConfigurations[t].barWidth,this.barsConfigurations[t].currentHeight),this.context.beginPath(),this.context.fillStyle=this.barsConfigurations[t].fillColor,this.context.strokeStyle=this.barsConfigurations[t].borderColor,this.context.rect(this.barsConfigurations[t].xAxis,this.barsConfigurations[t].yAxis,this.barsConfigurations[t].barWidth,this.barsConfigurations[t].currentHeight),this.context.fill(),this.context.stroke()}window.requestAnimationFrame(this.barAnimation.bind(this))}drawBars(){for(let t=0;t<this.itemsNumber;t++)this.context.beginPath(),this.context.fillStyle=this.barsConfigurations[t].fillColor,this.context.strokeStyle=this.barsConfigurations[t].borderColor,this.context.rect(this.barsConfigurations[t].xAxis,this.barsConfigurations[t].yAxis,this.barsConfigurations[t].barWidth,this.barsConfigurations[t].barHeight),this.context.fill(),this.context.stroke()}createRandomRGBColor(){return{red:getRandomInt(0,257),green:getRandomInt(0,257),blue:getRandomInt(0,257)}}gettingLinePoints(){this.context.strokeStyle=this.fontColor,this.lineCurrentPoint.xAxis=this.horizontalMargin,this.lineCurrentPoint.yAxis=this.height-this.verticalMargin;for(let t=0;t<this.itemsNumber;t++)this.lineXArc=this.horizontalMargin+t*this.horizontalLabelFreq+this.horizontalLabelFreq/2,this.lineYArc=this.height-this.verticalMargin+this.verticalAxisWidth*this.values[t]/this.verticalUpperBound*-1,this.linePoints.push({xAxis:this.lineXArc,yAxis:this.lineYArc,xVelocity:(this.lineXArc-this.lineCurrentPoint.xAxis)/25,yVelocity:(this.lineYArc-this.lineCurrentPoint.yAxis)/25}),this.lineCurrentPoint.xAxis=this.lineXArc,this.lineCurrentPoint.yAxis=this.lineYArc;this.lineCurrentPoint.xAxis=this.horizontalMargin,this.lineCurrentPoint.yAxis=this.height-this.verticalMargin,this.context.moveTo(this.lineCurrentPoint.xAxis,this.lineCurrentPoint.yAxis),this.context.lineWidth=2*this.axisWidth,this.context.fillStyle=this.fontColor}lineAnimation(){this.lineCurrentPoint.xAxis+=this.linePoints[this.linePointCount].xVelocity,(Math.round(1e4*this.lineCurrentPoint.yAxis)/1e4<=Math.round(1e4*this.linePoints[this.linePointCount].yAxis)/1e4&&this.linePoints[this.linePointCount].yVelocity<0||Math.round(1e4*this.lineCurrentPoint.yAxis)/1e4>=Math.round(1e4*this.linePoints[this.linePointCount].yAxis)/1e4&&this.linePoints[this.linePointCount].yVelocity>0)&&(this.context.beginPath(),this.context.arc(this.linePoints[this.linePointCount].xAxis,this.linePoints[this.linePointCount].yAxis,this.horizontalLabelFreq/10,0,2*Math.PI),this.context.fill(),this.context.moveTo(this.linePoints[this.linePointCount].xAxis,this.linePoints[this.linePointCount].yAxis),this.linePointCount++),this.linePointCount!==this.itemsNumber&&(this.lineCurrentPoint.yAxis+=this.linePoints[this.linePointCount].yVelocity,this.context.lineTo(this.lineCurrentPoint.xAxis,this.lineCurrentPoint.yAxis),this.context.stroke(),window.requestAnimationFrame(this.lineAnimation.bind(this)))}drawLines(){for(let t=0;t<this.itemsNumber;t++)this.context.lineTo(this.linePoints[t].xAxis,this.linePoints[t].yAxis),this.context.stroke(),this.context.beginPath(),this.context.arc(this.linePoints[t].xAxis,this.linePoints[t].yAxis,this.horizontalLabelFreq/10,0,2*Math.PI),this.context.fill(),this.context.moveTo(this.linePoints[t].xAxis,this.linePoints[t].yAxis)}}function getRandomInt(t,i){return t=Math.ceil(t),i=Math.floor(i),Math.floor(Math.random()*(i-t))+t}