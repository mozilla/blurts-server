/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* These styles are taken from
 * https://react-spectrum.adobe.com/react-aria/VisuallyHidden.html,
 * and are intended for content that's only relevant to screen reader users. */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  margin: 0 -1px -1px 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  display: block;
  height: 100%;
  min-width: var(--min-width);
  overflow-x: hidden;
}

body {
  min-height: 100%;
  padding-top: var(--header-h);
  font: normal 1rem/1.5 Inter, Inter-fallback, sans-serif;
}

h1 {
  font: var(--h1-font);
  margin: var(--padding-md) 0;
  line-height: 1.2;
}

h2 {
  font: var(--h2-font);
  margin: var(--padding-md) 0;
}

h3 {
  font: var(--h3-font);
  margin: var(--padding-md) 0;
}

h4 {
  font: var(--h4-font);
  margin: var(--padding-md) 0;
}

p {
  margin: var(--padding-md) 0;
}

a,
.anchor {
  color: inherit;
  font-size: inherit;
  line-height: inherit;
  text-decoration: underline;
  text-underline-position: under;
}

b,
strong {
  font-weight: 600;
}

hr {
  background-color: var(--gray-10);
  color: var(--gray-10);
  height: 1px;
}

hr:not(.monitor-gradient) {
  border: none;
}

hr.monitor-gradient {
  border-image: var(--monitor-gradient) 1;
}

img:not(.email-preview img) {
  display: block;
  max-width: 100%;
  height: auto;
}

menu {
  list-style-type: none;
}

body > header {
  position: fixed;
  top: 0;
  width: 100%;
  background: white;
  box-shadow: 0 6px 6px -8px #0000;
  transition: box-shadow 0.3s;
  z-index: 2;
}

body > header .header-wrapper {
  align-items: center;
  display: flex;
  justify-content: space-between;
  padding: var(--padding-md) var(--padding-lg);
  width: 100%;
}

.scrolled body > header {
  box-shadow: 0 6px 6px -8px #000;
}

body > header .monitor-logo {
  width: calc(213px * var(--multiplier));
  object-fit: contain;
}

body > header .nav-wrapper {
  align-items: center;
  display: flex;
  gap: var(--padding-sm);
}

main {
  --max-width-margin: calc(50% - var(--max-width)/2);

  margin-inline: max(var(--nav-w, 0px), var(--max-width-margin)) max(0px, var(--max-width-margin));
  animation: fade-in 0.2s ease-out;
}

.mobile main {
  margin-inline: auto;
}

section {
  padding: var(--padding-lg);
}

section + section {
  margin-top: var(--padding-xl);
}

.site-footer {
  position: sticky;
  top: 100%;
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: var(--gap);
  color: white;
  padding: var(--padding-md) var(--padding-lg);
  background: black;
  box-shadow: 0 -6px 6px -8px #000;
  z-index: 1;
}

.site-footer a {
  text-decoration: none;
}

.site-footer > menu {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--padding-md);
  font-size: 0.875rem;
}

.mobile .site-footer {
  padding: var(--padding-lg);
}

.mobile .site-footer > menu {
  flex-basis: 100%;
  flex-direction: column;
  align-items: start;
}

button,
.button {
  all: unset;
  display: inline-block;
  font-size: 0.875rem;
  line-height: 0.75;
  text-align: center;
  cursor: pointer;
  white-space: nowrap;
  border-radius: var(--border-radius);
}

button[hidden],
.button[hidden] {
  display: none;
}

button * {
  pointer-events: none;
}

button:disabled,
.button:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

button.primary,
.button.primary {
  color: white;
  background: var(--blue-50);
  border: 1px solid var(--blue-50);
  padding: var(--padding-md);
  transition: background 150ms;
}

button.secondary,
.button.secondary {
  color: var(--blue-50);
  border: 1px solid;
  padding: var(--padding-md);
}

button.primary:active,
.button.primary:active,
button.secondary:active,
.button.secondary:active {
  box-shadow: inset 0 0 64px #80808011;
}

button.primary:hover:enabled,
.button.primary:hover:enabled {
  background: var(--blue-60);
}

button.close {
  width: 24px;
  height: 24px;
  padding: var(--padding-md);
  background: url('../images/icon-close.svg') no-repeat 50%;
}

input {
  /* https://css-tricks.com/16px-or-larger-text-prevents-ios-form-zoom/ */
  font-size: 1rem;
}

input[type='checkbox'] {
  width: var(--checkbox-w);
  height: var(--checkbox-w);
}

label.text-field {
  display: flex;
  flex-flow: column;
  width: 100%;
  text-align: left;
}

label.text-field > span {
  font-size: 0.75rem;
  color: var(--gray-30);
}

label.text-field > input {
  outline: none;
  border: none;
  border-bottom: 1px solid var(--gray-20);
  font-size: 1rem;
  line-height: 1.5;
  transition: border-color 0.2s linear;
}

label.text-field > input:focus {
  border-bottom-color: var(--gray-30);
}

dialog {
  width: min(640px, 100%);
  margin: auto;
  padding: var(--padding-lg) var(--padding-sm);
  border: none;
  border-radius: var(--border-radius);
}

@media screen and (min-width: var(--mobile-breakpoint)) {
  dialog {
    padding: var(--padding-xl);
  }
}


dialog[open] {
  animation: fade-in 0.3s;
}

dialog::backdrop {
  background: rgb(0 0 0 / 0.8);
}

dialog button.close {
  position: absolute;
  top: 0;
  right: 0;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

[data-enter-transition] {
  opacity: var(--enter-transition-opacity, 1);
  transform: translateY(var(--enter-transition-y, 0));
}

[data-enter-transition=''] {
  animation: section-animation ease-out 350ms forwards 350ms;
}

[data-enter-transition='visible'] {
  animation: section-animation ease-out 350ms forwards;
}

@keyframes section-animation {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
