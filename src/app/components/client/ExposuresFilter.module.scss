@import "../../tokens";

.filterHeaderWrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: $layout-xs;
  padding: $spacing-sm $spacing-md;
  border-bottom: 1px solid $color-grey-20;

  @media screen and (min-width: $screen-lg) {
    gap: $layout-md;
  }

  .rightSpace {
    // Spacing to accomodate the gap where the chevron of the same dimension falls within the alignment
    width: 20px;
    height: 20px;
  }

  button {
    @include question-mark-circle-btn;
  }

  ul.filterHeaderList {
    font: $text-body-sm;
    font-weight: 600;
    list-style-type: none;
    display: flex;
    align-items: center;
    padding-left: 0;
    gap: $layout-md;
    width: 100%;
    justify-content: space-between;

    li {
      display: flex;
      align-items: center;
      gap: $spacing-xs;

      &.hideOnMobile {
        display: none;
      }

      @media screen and (min-width: $screen-lg) {
        flex: 1 1 0%;

        &.exposureImageWrapper {
          flex: 0.2 0 $width-first-column-filter-bar;
        }

        &.hideOnMobile {
          display: flex;
        }
      }
    }

    .filterBtn {
      display: flex;
      flex-direction: row;
      gap: $spacing-xs;
      align-items: center;
    }
  }
}

.filterPopOver {
  background: $color-white;
  border-radius: $border-radius-sm;
  box-shadow: $box-shadow-md;
  width: $content-xs;
  padding: $spacing-md;
  overflow-y: scroll;

  @media screen and (min-width: $screen-sm) {
    width: auto;
    padding: $spacing-xl;
    overflow-y: hidden;
  }

  .exposuresFilterWrapper {
    .dismissButton {
      position: absolute;
      top: 0;
      right: 0;
      padding: $spacing-md;
      color: $color-grey-40;
      background: none;
      border: none;
      cursor: pointer;

      &:hover {
        color: $color-grey-30;
      }
    }

    .filterControls {
      display: flex;
      flex-direction: row;
      gap: $spacing-xs;
      float: right;
      padding-top: $spacing-md;

      button {
        padding: $spacing-sm $spacing-xl;
      }
    }

    .exposuresFilterRadioButtons {
      display: flex;
      flex-direction: column;
      gap: $spacing-md;

      @media screen and (min-width: $screen-sm) {
        flex-direction: row;
        gap: $spacing-2xl;
      }

      .exposuresFilterCategory {
        .radioButtonsWrapper {
          padding-top: $spacing-sm;
          display: flex;
          flex-direction: column;
          gap: $spacing-xs;

          .radioItem {
            font: $text-body-sm;
            font-weight: 500;
            display: flex;
            gap: $spacing-xs;
          }
        }

        .exposuresFilterLabel {
          font-weight: 600;
          border-bottom: 1px solid $color-black;
          padding-bottom: $spacing-xs;
          display: flex;
          flex-direction: row;
          gap: $spacing-xs;
          align-items: center;
        }
      }
    }
  }
}

.modalBodyContent {
  align-items: center;
  display: flex;
  flex-direction: column;
  gap: $spacing-md;
}

.visuallyHidden {
  @include visually-hidden;
}
